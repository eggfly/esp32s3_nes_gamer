//字体：观致8px

const uint8_t lbwcn16pxBitmaps[] PROGMEM = {
  0xFF, 0xFF, 0x0F, 0x03, 0x0C, 0x0C, 0x33, 0xFF, 0x0F, 0xFC, 0x03, 0x30, 
  0x0C, 0xCF, 0xFF, 0xFF, 0xFF, 0x3C, 0x30, 0xF0, 0xCC, 0xCC, 0xF3, 0x33, 
  0x03, 0xFC, 0x0F, 0xF0, 0x0F, 0xC0, 0x3F, 0x0F, 0xFF, 0xFF, 0xFF, 0xCC, 
  0xCF, 0x33, 0x33, 0x30, 0x0C, 0xC0, 0x3F, 0x3C, 0xFC, 0xFF, 0xF3, 0xFF, 
  0xCF, 0x0C, 0xCC, 0x33, 0x30, 0xFF, 0xFF, 0xFF, 0xF0, 0x30, 0x00, 0xC0, 
  0x03, 0x00, 0x0C, 0x03, 0xFF, 0x0F, 0xFC, 0x03, 0x00, 0x0C, 0x00, 0x30, 
  0x00, 0xC0, 0xFF, 0xFF, 0xFF, 0xF0, 0x0C, 0xC0, 0x33, 0x0F, 0xFF, 0xFF, 
  0xFF, 0x0C, 0xC0, 0x33, 0x00, 0xFC, 0x03, 0xF0, 0xFF, 0xFF, 0xFF, 0xF0, 
  0x00, 0x00, 0x00, 0xF0, 0x3F, 0xC0, 0xF0, 0xFF, 0xFF, 0xFF, 0xFC, 0x30, 
  0x30, 0xC0, 0xC3, 0x03, 0x0C, 0x0F, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x0C, 
  0x03, 0x33, 0x0C, 0xCC, 0xCF, 0x0F, 0x3C, 0x30, 0x3F, 0xF0, 0xFF, 0xC0, 
  0x30, 0x00, 0xC0, 0x03, 0x00, 0x0C, 0x0F, 0xFF, 0xFF, 0xFF, 0x03, 0xC0, 
  0x0F, 0x00, 0xCC, 0xC3, 0x33, 0xF0, 0xFF, 0xC3, 0xF0, 0x03, 0x00, 0x0C, 
  0x0F, 0xFF, 0xFF, 0xFF, 0xCC, 0xCF, 0x33, 0x33, 0x03, 0x0C, 0x0C, 0xFF, 
  0xF3, 0xFF, 0xC0, 0xC3, 0x03, 0x0C, 0xF0, 0xF3, 0xC3, 0xC0, 0xFF, 0xF0, 
  0xC3, 0x30, 0xC3, 0x0C, 0x30, 0xC0, 0xFF, 0xFC, 0xF3, 0xFF, 0xFC, 0xF3, 
  0xFF, 0xF0, 0xFF, 0xFC, 0xF3, 0xFF, 0xF0, 0xC3, 0xFF, 0xF0, 0x30, 0xCC, 
  0xF3, 0xCF, 0x3C, 0xF3, 0xCF, 0x33, 0x0C
};

const GFXglyph lbwcn16pxGlyphs[] PROGMEM = {
  {     0,   0,   0,  16,    0,    1 },   // 0x20 ' '
  {     0,   0,   0,   0,    0,    0 },   // 0x21 '!'
  {     0,   0,   0,   0,    0,    0 },   // 0x22 '"'
  {     0,   0,   0,   0,    0,    0 },   // 0x23 '#'
  {     0,   0,   0,   0,    0,    0 },   // 0x24 '$'
  {     0,   0,   0,   0,    0,    0 },   // 0x25 '%'
  {     0,   0,   0,   0,    0,    0 },   // 0x26 '&'
  {     0,   0,   0,   0,    0,    0 },   // 0x27 '''
  {     0,   0,   0,   0,    0,    0 },   // 0x28 '('
  {     0,   0,   0,   0,    0,    0 },   // 0x29 ')'
  {     0,   0,   0,   0,    0,    0 },   // 0x2A '*'
  {     0,   0,   0,   0,    0,    0 },   // 0x2B '+'
  {     0,   0,   0,   0,    0,    0 },   // 0x2C ','
  {     0,   0,   0,   0,    0,    0 },   // 0x2D '-'
  {     0,   0,   0,   0,    0,    0 },   // 0x2E '.'
  {     0,   0,   0,   0,    0,    0 },   // 0x2F '/'
  {     3,  14,  14,  16,    0,  -12 },   // 0x30 '0'
  {    28,  14,  14,  16,    0,  -12 },   // 0x31 '1'
  {    53,  14,  14,  16,    0,  -12 },   // 0x32 '2'
  {    78,  14,  14,  16,    0,  -12 },   // 0x33 '3'
  {   103,  14,  14,  16,    0,  -12 },   // 0x34 '4'
  {   128,  14,  14,  16,    0,  -12 },   // 0x35 '5'
  {   153,  14,  14,  16,    0,  -12 },   // 0x36 '6'
  {   178,   6,  10,   8,    0,  -10 },   // 0x37 '7'
  {   186,   6,  10,   8,    0,  -10 },   // 0x38 '8'
  {   194,   6,  10,   8,    0,  -10 }    // 0x39 '9'
};

const GFXfont lbwcn16px PROGMEM = {
  (uint8_t  *)lbwcn16pxBitmaps,  
  (GFXglyph *)lbwcn16pxGlyphs, 0x20, 0x7E,   19 };

// Approx. 1479 bytes

const uint8_t lbwcn24pxBitmaps[] PROGMEM = {
  0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x07, 0xFC, 0x00, 0x70, 0x38, 0x03, 0x81, 
  0xC0, 0x1C, 0x0E, 0x3F, 0xFF, 0x81, 0xFF, 0xFC, 0x0F, 0xFF, 0xE0, 0x01, 
  0xC7, 0x00, 0x0E, 0x38, 0x00, 0x71, 0xC7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xF1, 0xF8, 0x1C, 0x0F, 0xC0, 0xE0, 0x7E, 0x07, 0x1C, 0x71, 
  0xC7, 0xE3, 0x8E, 0x3F, 0x1C, 0x71, 0xC0, 0x1F, 0xFE, 0x00, 0xFF, 0xF0, 
  0x07, 0xFF, 0x80, 0x03, 0xFE, 0x00, 0x1F, 0xF0, 0x00, 0xFF, 0x81, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x8E, 0x38, 0xFC, 0x71, 0xC7, 
  0xE3, 0x8E, 0x38, 0xE3, 0x80, 0x07, 0x1C, 0x00, 0x38, 0xE0, 0x01, 0xFF, 
  0x1F, 0x8F, 0xF8, 0xFC, 0x7F, 0xC7, 0xFF, 0xFE, 0x3F, 0xFF, 0xF1, 0xFF, 
  0xFF, 0x8F, 0xC0, 0xE3, 0x8E, 0x07, 0x1C, 0x70, 0x38, 0xE3, 0x80, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0xE0, 0x00, 0x07, 0x00, 
  0x00, 0x38, 0x00, 0x01, 0xC0, 0x00, 0x0E, 0x00, 0x00, 0x70, 0x00, 0xFF, 
  0xFE, 0x07, 0xFF, 0xF0, 0x3F, 0xFF, 0x80, 0x07, 0x00, 0x00, 0x38, 0x00, 
  0x01, 0xC0, 0x00, 0x0E, 0x00, 0x00, 0x70, 0x00, 0x03, 0x80, 0x3F, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x03, 0x8E, 0x00, 0x1C, 0x70, 
  0x00, 0xE3, 0x81, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x0E, 
  0x38, 0x00, 0x71, 0xC0, 0x03, 0x8E, 0x00, 0x1F, 0xF0, 0x00, 0xFF, 0x80, 
  0x07, 0xFC, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x7F, 0xF8, 0x03, 0xFF, 
  0xC0, 0x1F, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 
  0xE0, 0x0E, 0x07, 0x00, 0x70, 0x38, 0x03, 0x81, 0xC0, 0x1C, 0x0E, 0x00, 
  0xE0, 0x70, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x07, 
  0x00, 0x00, 0x38, 0x00, 0x01, 0xC0, 0x03, 0x8E, 0x38, 0x1C, 0x71, 0xC0, 
  0xE3, 0x8E, 0x38, 0xFC, 0x0F, 0xC7, 0xE0, 0x7E, 0x3F, 0x03, 0x80, 0x1F, 
  0xFF, 0xC0, 0xFF, 0xFE, 0x07, 0xFF, 0xF0, 0x00, 0xE0, 0x00, 0x07, 0x00, 
  0x00, 0x38, 0x00, 0x01, 0xC0, 0x00, 0x0E, 0x00, 0x00, 0x70, 0x07, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x07, 0xE0, 0x00, 0x3F, 0x00, 
  0x01, 0xF8, 0x00, 0x71, 0xC7, 0x03, 0x8E, 0x38, 0x1C, 0x71, 0xFF, 0x03, 
  0xFF, 0xF8, 0x1F, 0xFF, 0xC0, 0xFF, 0x80, 0x00, 0x70, 0x00, 0x03, 0x80, 
  0x00, 0x1C, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x8E, 
  0x38, 0xFC, 0x71, 0xC7, 0xE3, 0x8E, 0x38, 0xE0, 0x0E, 0x07, 0x00, 0x70, 
  0x38, 0x03, 0x8F, 0xFF, 0xFC, 0x7F, 0xFF, 0xE3, 0xFF, 0xFF, 0x00, 0x70, 
  0x38, 0x03, 0x81, 0xC0, 0x1C, 0x0E, 0x3F, 0x03, 0xF1, 0xF8, 0x1F, 0x8F, 
  0xC0, 0xFC, 0x00, 0x1C, 0x71, 0xC0, 0xE3, 0x8E, 0x07, 0x1C, 0x71, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x8F, 0xF8, 0xFC, 0x7F, 0xC7, 
  0xE3, 0xFE, 0x38, 0x00, 0x70, 0x00, 0x03, 0x80, 0x00, 0x1C, 0x0F, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x0E, 0x00, 0x00, 0x70, 0x00, 
  0x03, 0x80, 0x00, 0xFC, 0x00, 0x07, 0xE0, 0x00, 0x3F, 0x00, 0x00, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x70, 0x07, 0x1C, 0x01, 0xC7, 0x00, 
  0x70, 0x38, 0x1C, 0x0E, 0x07, 0x03, 0x81, 0xC0, 0x00, 0x70, 0x00, 0x1C, 
  0x00, 0x07, 0x03, 0xF1, 0xC0, 0xFC, 0x70, 0x3F, 0x1F, 0xF0, 0x07, 0xFC, 
  0x01, 0xFF, 0x00, 0x70, 0x00, 0xFC, 0x00, 0x3F, 0x00, 0x0F, 0xC0, 0x1C, 
  0x7F, 0xC0, 0xE3, 0xFE, 0x07, 0x1F, 0xF1, 0xFF, 0xE3, 0x8F, 0xFF, 0x1C, 
  0x7F, 0xF8, 0xE0, 0x71, 0xC7, 0x03, 0x8E, 0x38, 0x1C, 0x71, 0xC7, 0xFF, 
  0x8E, 0x3F, 0xFC, 0x71, 0xFF, 0xE3, 0x8F, 0xC7, 0x1C, 0x7E, 0x38, 0xE3, 
  0xF1, 0xC7, 0x03, 0x8E, 0x38, 0x1C, 0x71, 0xC0, 0xE3, 0x8E, 0x07, 0xE0, 
  0x7E, 0x3F, 0x03, 0xF1, 0xF8, 0x1F, 0x80
};

const GFXglyph lbwcn24pxGlyphs[] PROGMEM = {
  {     0,   0,   0,  24,    0,    1 },   // 0x20 ' '
  {     0,   0,   0,   0,    0,    0 },   // 0x21 '!'
  {     0,   0,   0,   0,    0,    0 },   // 0x22 '"'
  {     0,   0,   0,   0,    0,    0 },   // 0x23 '#'
  {     0,   0,   0,   0,    0,    0 },   // 0x24 '$'
  {     0,   0,   0,   0,    0,    0 },   // 0x25 '%'
  {     0,   0,   0,   0,    0,    0 },   // 0x26 '&'
  {     0,   0,   0,   0,    0,    0 },   // 0x27 '''
  {     0,   0,   0,   0,    0,    0 },   // 0x28 '('
  {     0,   0,   0,   0,    0,    0 },   // 0x29 ')'
  {     0,   0,   0,   0,    0,    0 },   // 0x2A '*'
  {     0,   0,   0,   0,    0,    0 },   // 0x2B '+'
  {     0,   0,   0,   0,    0,    0 },   // 0x2C ','
  {     0,   0,   0,   0,    0,    0 },   // 0x2D '-'
  {     0,   0,   0,   0,    0,    0 },   // 0x2E '.'
  {     0,   0,   0,   0,    0,    0 },   // 0x2F '/'
  {     7,  21,  21,  24,    0,  -18 },   // 0x30 '0'
  {    63,  21,  21,  24,    0,  -18 },   // 0x31 '1'
  {   119,  21,  21,  24,    0,  -18 },   // 0x32 '2'
  {   175,  21,  21,  24,    0,  -18 },   // 0x33 '3'
  {   231,  21,  21,  24,    0,  -18 },   // 0x34 '4'
  {   287,  21,  21,  24,    0,  -18 },   // 0x35 '5'
  {   343,  21,  21,  24,    0,  -18 },   // 0x36 '6'
  {   399,  21,  21,  24,    0,  -18 },   // 0x37 '7'
  {   455,  18,  21,  24,    3,  -18 },   // 0x38 '8'
  {   503,  21,  21,  24,    0,  -18 }   // 0x39 '9'
};

const GFXfont lbwcn24px PROGMEM = {
  (uint8_t  *)lbwcn24pxBitmaps, 
  (GFXglyph *)lbwcn24pxGlyphs, 0x20, 0x7E,  29 };

// Approx. 2615 bytes


